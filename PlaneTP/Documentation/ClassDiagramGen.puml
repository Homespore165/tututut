@startuml
class Controller {
	+ Scenario scenario
	+ View view
	+ void CreateAirport(String name, int x, int y, int passengerTraffic, int cargoTraffic)
	+ void EditAirport(int id, String name, int x, int y, int passengerTraffic, int cargoTraffic)
	+ void DeleteAirport(int id)
	+ void CreatePlane(String name, int x, int y, int speed, int maintenanceTime)
	+ void SaveScenario()
	+ void LoadScenario()
	+ void ResetScenario()
}

class Scenario {
	+ Airport[] airports 
	+ int FrequencyFire
	+ int FrequencyRescue
	+ int FrequencyRecon
	+ void CreateAirport(String name, int x, int y, int passengerTraffic, int cargoTraffic)
	+ void EditAirport(int id, String name, int x, int y, int passengerTraffic, int cargoTraffic)
	+ void DeleteAirport(int id)
	+ void CreatePlane(String name, int x, int y, int speed, int maintenanceTime)
}

interface IXmlSerializable {
	+ void WriteXml()
	+ void ReadXml()
}

class Position {
	+ int x
	+ int y
}


abstract class Plane {
	+ String name
	+ Position position
	+ int speed
	+ int maintenanceTime
}

abstract class PlaneTransport {
}

abstract class PlaneSupport {
}

class Airport {
	+ String name
	+ Plane[] planes
	+ int passengerTraffic
	+ int cargoTraffic
}

PlaneTransport --|> Plane
PlaneSupport --|> Plane
PlaneCargo --|> PlaneTransport
PlanePassengers --|> PlaneTransport
PlaneFire --|> PlaneSupport
PlaneRescue --|> PlaneSupport
PlaneRecon --|> PlaneSupport
Airport --|> Position
Airport *-- Plane
Scenario "1" *-- "N" Airport
Scenario --* Controller
Controller *-- View

IXmlSerializable <|-. Scenario
IXmlSerializable <|-. Plane
IXmlSerializable <|-. Airport
@enduml