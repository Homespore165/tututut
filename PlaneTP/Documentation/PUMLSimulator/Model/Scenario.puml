@startuml
class Scenario {
    -  <<event>> FlightUpdate : Flight 
    -  <<event>> AirportUpdate : AirportDelegate 
    - {static} _instance : Scenario
    + {static} Instance : Scenario <<get>>
    - _planes : List<Plane>
    + Planes : List<Plane> <<get>>
    - _airports : List<Airport>
    + Airports : List<Airport> <<get>> <<set>>
    - _clientsSupport : List<ClientSupport>
    + ClientsSupport : List<ClientSupport> <<get>> <<set>>
    + ClientsFire : List<ClientFire> <<get>>
    + ClientsRecon : List<ClientRecon> <<get>>
    + ClientsRescue : List<ClientRescue> <<get>>
    - _frequencyFire : int
    + FrequencyFire : int <<get>> <<set>>
    - _frequencyRecon : int
    + FrequencyRecon : int <<get>> <<set>>
    - _frequencyRescue : int
    + FrequencyRescue : int <<get>> <<set>>
    + Scenario()
    + Scenario(frequencyFire:int, frequencyRecon:int, frequencyRescue:int)
    + GetSchema() : XmlSchema?
    + ReadXml(reader:XmlReader) : void
    + Load() : void
    - GenerateFire() : void
    - GenerateRecon() : void
    - GenerateRescue() : void
    - GenerateClients() : void
    + TimeStep() : void
    + updateView() : void
    + SubscribeFlights(eventHandler:Flight) : void
    + SubscribeAirports(eventHandler:AirportDelegate) : void
    + GetRandomAirportExcluding(airport:Airport) : Airport
    + RemoveClient(client:ClientSupport) : void
    + GetAirportPlanes() : List<string>
}
@enduml
