@startuml

title Time step through O.T.A.I simulator

actor "User" as bob1 #GreenYellow
actor "User" as bob2 order 200 #GreenYellow
participant SimForm #a5c5a5
participant "Controller" as ctrl1
participant "Scenario" as scene1 #c5a5a5
participant "ClientSupportFactory" as facto1
participant "ClientSupport" as clisupp
participant "Position" as pos1
participant "Airport" as port1
participant "Scenario" as scene2 #c5a5a5
participant "ClientTransportFactory" as facto2
participant "ClientTransport" as clitrsp
participant "Plane" as plane1
participant "State" as state1
participant "SimForm" as form2 #a5c5a5

activate bob1

bob1 -> SimForm : Clicks time step button
deactivate bob1
activate SimForm


SimForm -> ctrl1 : TimeStep(timeToAdvance)
activate ctrl1

ctrl1 -> scene1 : TimeStep()
activate scene1

scene1 -> scene1 : GenerateClients();
note left : We do TimeStep() {timeToAdvance} times
activate scene1

scene1 -> facto1 : Add(factory.CreateClientSupport("{type}"));

activate facto1

create clisupp

facto1 -> clisupp : new
activate clisupp
note right : [...] Meaning any of the 3 possible\n functions to create support clients
create pos1
clisupp -> pos1 : new
activate pos1

return Position
return ClientSupport
return ClientSupport


scene1 -> plane1 : TimeStep()
activate plane1

plane1 -> state1 : TimeStep()
activate state1

return 
return 

scene1 -> port1 : TimeStep()
activate port1

port1 -> port1 : GenerateClients()
activate port1

port1 -> scene2 : GetRandomAirportExcluding(self)
activate scene2

return Airport

return 

port1 -> facto2 : Add(factory.CreateClientTransport("Transport{Type}", destination)
note left : [...] Meaning any of the 2 possible\nfunctions to create transport clients
activate facto2

create clitrsp
facto2 -> clitrsp : new
activate clitrsp

return ClientTransport
return ClientTransport
return 
return 
return 


ctrl1 -> scene1 : UpdateView()
deactivate 
activate scene1
activate form2
scene1 ->o form2 : <Event> FlightUpdate
scene1 ->o form2 : <Event> AiportUpdate
scene1 ->o form2 : <Event> PlaneUpdate
deactivate scene1

activate form2
form2 -> form2 : OnMapUpdate(string[] MapState)

form2 -> bob2 : Displays updated map
activate bob2

deactivate bob2
deactivate form2

deactivate SimForm
@enduml

